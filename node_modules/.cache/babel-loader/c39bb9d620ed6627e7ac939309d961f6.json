{"ast":null,"code":"var _jsxFileName = \"/Users/shulin/Development/code/phase-3/phase-3-final-project/phase-3-sinatra-react-project-client/src/FruitForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FruitForm(_ref) {\n  let {\n    formData,\n    onChangeFormData,\n    onAddFruit,\n    onUpdateFruit\n  } = _ref;\n\n  function handleChange(e) {\n    const key = e.target.name;\n    const value = e.target.value;\n    onChangeFormData({ ...formData,\n      [key]: value\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (formData.id === undefined) {\n      fetch('http://localhost:9292/fruits', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }).then(r => r.json()).then(data => {\n        onAddFruit(data);\n      });\n    } else {\n      fetch(`http://localhost:9292/fruits/${formData.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      }).then(r => r.json()).then(data => {\n        onUpdateFruit(formData);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"NewItem\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add new Fruit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"price\",\n        value: formData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Stock:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"stock\",\n        value: formData.stock,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Health benefit:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"health_benefit\",\n        value: formData.health_benefit,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FruitForm;\nexport default FruitForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FruitForm\");","map":{"version":3,"sources":["/Users/shulin/Development/code/phase-3/phase-3-final-project/phase-3-sinatra-react-project-client/src/FruitForm.js"],"names":["React","FruitForm","formData","onChangeFormData","onAddFruit","onUpdateFruit","handleChange","e","key","target","name","value","handleSubmit","preventDefault","id","undefined","fetch","method","headers","body","JSON","stringify","then","r","json","data","price","stock","health_benefit"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction FruitForm({formData, onChangeFormData, onAddFruit, onUpdateFruit}) {\n  function handleChange(e){\n      const key = e.target.name\n      const value = e.target.value\n      onChangeFormData({\n        ...formData,\n        [key]:value\n      })\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    if(formData.id===undefined){\n      fetch('http://localhost:9292/fruits',{\n        method:\"POST\",\n        headers:{\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(formData)\n      })\n      .then(r=>r.json())\n      .then(data=>{\n          onAddFruit(data)\n      })\n    }else{\n      fetch(`http://localhost:9292/fruits/${formData.id}`,{\n        method:\"PATCH\",\n        headers:{\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(formData)\n      })\n      .then(r=>r.json())\n      .then(data=>{\n          onUpdateFruit(formData)\n      })\n    }\n  }\n\n  return (\n    <form className=\"NewItem\" onSubmit={handleSubmit}>\n      <h3>Add new Fruit</h3>\n      <label>\n        Name:\n        <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange}/>\n      </label>\n      <label>\n        Price:\n        <input type=\"text\" name=\"price\" value={formData.price} onChange={handleChange}/>\n      </label>\n      <label>\n        Stock:\n        <input type=\"text\" name=\"stock\" value={formData.stock} onChange={handleChange}/>\n      </label>\n      <label>\n        Health benefit:\n        <textarea type=\"text\" name=\"health_benefit\" value={formData.health_benefit} onChange={handleChange}/>\n      </label>\n      <button type=\"submit\">Save</button>\n    </form>\n  );\n}\n\nexport default FruitForm;"]},"metadata":{},"sourceType":"module"}