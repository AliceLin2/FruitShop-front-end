{"ast":null,"code":"var _jsxFileName = \"/Users/shulin/Development/code/phase-3/phase-3-final-project/phase-3-sinatra-react-project-client/src/FruitList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  display: \"inline-block\",\n  width: \"500px\",\n  padding: \"20px\",\n  margin: \"0 10px 10px\",\n  color: \"black\",\n  fontSize: \"20px\"\n};\n\nfunction FruitList(_ref) {\n  _s();\n\n  let {\n    fruits,\n    onDeleteFruit,\n    onUpdateFruit\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const [price, setPrice] = useState();\n  const [stock, setStock] = useState();\n  const [healthBenefit, setHealthBenefit] = useState();\n\n  function UpdateForm(fruit) {}\n\n  function handleUpdate(fruit) {\n    if (editMode === false) {\n      setEditMode(!editMode);\n    } else {\n      fetch(`http://localhost:9292/fruits/${fruit.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ ...fruit,\n          price,\n          stock,\n          health_benefit: healthBenefit\n        })\n      }).then(r => r.json()).then(data => {\n        setEditMode(!editMode);\n        onUpdateFruit(data);\n        console.log(data);\n      });\n    }\n  }\n\n  function handleDelete(id) {\n    fetch(`http://localhost:9292/fruits/${id}`, {\n      method: \"DELETE\"\n    }).then(r => r.json()).then(data => {\n      onDeleteFruit(id);\n    });\n  }\n\n  function Fruit(_ref2) {\n    let {\n      fruit\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: fruit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: \", fruit.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stock: \", fruit.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Health_benefit: \", fruit.health_benefit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"update\",\n        onClick: e => handleUpdate(fruit),\n        children: editMode ? \"save\" : \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete\",\n        onClick: e => handleDelete(fruit.id),\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  return fruits.map(f => /*#__PURE__*/_jsxDEV(Fruit, {\n    fruit: f\n  }, f.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 28\n  }, this));\n}\n\n_s(FruitList, \"GzSOOO5v56/vthMg+MKnm2UGgZw=\");\n\n_c = FruitList;\nexport default FruitList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FruitList\");","map":{"version":3,"sources":["/Users/shulin/Development/code/phase-3/phase-3-final-project/phase-3-sinatra-react-project-client/src/FruitList.js"],"names":["React","useState","style","display","width","padding","margin","color","fontSize","FruitList","fruits","onDeleteFruit","onUpdateFruit","editMode","setEditMode","price","setPrice","stock","setStock","healthBenefit","setHealthBenefit","UpdateForm","fruit","handleUpdate","fetch","id","method","headers","body","JSON","stringify","health_benefit","then","r","json","data","console","log","handleDelete","Fruit","name","e","map","f"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nconst style = {\n    display: \"inline-block\",\n    width: \"500px\",\n    padding: \"20px\",\n    margin: \"0 10px 10px\",\n    color: \"black\",\n    fontSize: \"20px\"\n};\nfunction FruitList({fruits, onDeleteFruit, onUpdateFruit}) {\n    const [editMode, setEditMode] = useState(false)\n    const [price, setPrice] = useState()\n    const [stock, setStock] = useState()\n    const [healthBenefit, setHealthBenefit] = useState()\n\n    function UpdateForm(fruit){\n \n    }\n    function handleUpdate(fruit){\n        if(editMode===false){\n          setEditMode(!editMode)\n        }else{\n            fetch(`http://localhost:9292/fruits/${fruit.id}`,{\n                method:\"PATCH\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    ...fruit,\n                    price,\n                    stock,\n                    health_benefit: healthBenefit\n                })\n            })\n            .then(r=>r.json())\n            .then(data=>{\n                setEditMode(!editMode)\n                onUpdateFruit(data)\n                console.log(data)\n            })\n        }\n    }\n  \n    function handleDelete(id){\n      fetch(`http://localhost:9292/fruits/${id}`,{\n          method:\"DELETE\"\n      })\n      .then(r=>r.json())\n      .then(data=>{\n        onDeleteFruit(id)\n      })\n    } \n    function Fruit({fruit}) {\n        return (\n            <div style={style}>\n                <br />\n                <div>\n                    <h2>{fruit.name}</h2>\n                    <p>Price: {fruit.price}</p>\n                    <p>Stock: {fruit.stock}</p>\n                    <p>Health_benefit: {fruit.health_benefit}</p>\n                </div>\n                <button id='update' onClick={e=>handleUpdate(fruit)}>{editMode?\"save\":\"update\"}</button> \n                <button id='delete' onClick={e=>handleDelete(fruit.id)}>delete</button>        \n            </div>\n        );\n    }\n\n    return (\n        fruits.map((f) => (<Fruit fruit={f} key={f.id}/>))\n    );\n}\n\nexport default FruitList;"]},"metadata":{},"sourceType":"module"}