{"ast":null,"code":"var _jsxFileName = \"/Users/shulin/Development/code/phase-3/phase-3-final-project/phase-3-sinatra-react-project-client/src/Shop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Shop() {\n  _s();\n\n  const {\n    ownerId\n  } = useParams();\n  const history = useHistory();\n  fetch(`http://localhost:9292/owners/${ownerId}/fruits`).then(r => r.json()).then(fruits => setFruits(fruits));\n\n  function handleAddFruit(newFruit) {\n    setFruits([...fruits, newFruit]);\n    setFormData(empty);\n  }\n\n  function handleDeleteFruit(id) {\n    const updatedFruits = fruits.filter(fruit => fruit.id !== id);\n    setFruits(updatedFruits);\n  }\n\n  function handleUpdateFruit(updatedFruit) {\n    const updatedFruits = fruits.map(fruit => {\n      if (fruit.id === updatedFruit.id) {\n        return updatedFruit;\n      } else {\n        return fruit;\n      }\n    });\n    setFruits(updatedFruits);\n    setFormData(empty);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FruitList, {\n      fruits: showFruits,\n      onDeleteFruit: handleDeleteFruit,\n      onChangeFormData: setFormData,\n      onChangeSelectedOwner: setSelectedOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Shop, \"O496G9+DXE+XI3HOxU+3mvT3bUU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Shop;\nexport default Shop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shop\");","map":{"version":3,"sources":["/Users/shulin/Development/code/phase-3/phase-3-final-project/phase-3-sinatra-react-project-client/src/Shop.js"],"names":["React","useEffect","useState","useParams","useHistory","Shop","ownerId","history","fetch","then","r","json","fruits","setFruits","handleAddFruit","newFruit","setFormData","empty","handleDeleteFruit","id","updatedFruits","filter","fruit","handleUpdateFruit","updatedFruit","map","showFruits","setSelectedOwner"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,kBAApC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM;AAACC,IAAAA;AAAD,MAAYH,SAAS,EAA3B;AACA,QAAMI,OAAO,GAAGH,UAAU,EAA1B;AAEAI,EAAAA,KAAK,CAAE,gCAA+BF,OAAQ,SAAzC,CAAL,CACCG,IADD,CACOC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADb,EAECF,IAFD,CAEOG,MAAD,IAAYC,SAAS,CAACD,MAAD,CAF3B;;AAIA,WAASE,cAAT,CAAwBC,QAAxB,EAAkC;AAChCF,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYG,QAAZ,CAAD,CAAT;AACAC,IAAAA,WAAW,CAACC,KAAD,CAAX;AACD;;AAED,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,UAAMC,aAAa,GAAGR,MAAM,CAACS,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACH,EAAN,KAAaA,EAAtC,CAAtB;AACAN,IAAAA,SAAS,CAACO,aAAD,CAAT;AACD;;AAED,WAASG,iBAAT,CAA2BC,YAA3B,EAAyC;AACvC,UAAMJ,aAAa,GAAGR,MAAM,CAACa,GAAP,CAAYH,KAAD,IAAW;AAC1C,UAAIA,KAAK,CAACH,EAAN,KAAaK,YAAY,CAACL,EAA9B,EAAkC;AAChC,eAAOK,YAAP;AACD,OAFD,MAEO;AACL,eAAOF,KAAP;AACD;AACF,KANqB,CAAtB;AAOAT,IAAAA,SAAS,CAACO,aAAD,CAAT;AACAJ,IAAAA,WAAW,CAACC,KAAD,CAAX;AACD;;AAED,sBACC;AAAA,2BACG,QAAC,SAAD;AACE,MAAA,MAAM,EAAES,UADV;AAEE,MAAA,aAAa,EAAER,iBAFjB;AAGE,MAAA,gBAAgB,EAAEF,WAHpB;AAIE,MAAA,qBAAqB,EAAEW;AAJzB;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADD;AAUD;;GAxCQtB,I;UACWF,S,EACFC,U;;;KAFTC,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {useParams, useHistory} from \"react-router-dom\"\n\nfunction Shop() {\n  const {ownerId} = useParams()\n  const history = useHistory() \n\n  fetch(`http://localhost:9292/owners/${ownerId}/fruits`)\n  .then((r) => r.json())\n  .then((fruits) => setFruits(fruits))\n\n  function handleAddFruit(newFruit) {\n    setFruits([...fruits, newFruit])\n    setFormData(empty)\n  }\n\n  function handleDeleteFruit(id) {\n    const updatedFruits = fruits.filter((fruit) => fruit.id !== id)\n    setFruits(updatedFruits)\n  }\n\n  function handleUpdateFruit(updatedFruit) {\n    const updatedFruits = fruits.map((fruit) => {\n      if (fruit.id === updatedFruit.id) {\n        return updatedFruit;\n      } else {\n        return fruit;\n      }\n    });\n    setFruits(updatedFruits)\n    setFormData(empty)\n  }\n  \n  return (\n   <div>\n      <FruitList\n        fruits={showFruits}\n        onDeleteFruit={handleDeleteFruit}\n        onChangeFormData={setFormData}\n        onChangeSelectedOwner={setSelectedOwner}\n      />\n    </div>\n  );\n}\n\nexport default Shop;\n"]},"metadata":{},"sourceType":"module"}